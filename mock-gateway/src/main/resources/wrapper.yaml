# Source: https://sandbox.abdm.gov.in/swagger/ndhm-gateway.yaml
openapi: 3.0.0
info:
  version: "0.5"
  title: Wrapper
  description: Wrapper
servers:
- url: http://abdm-wrapper:8082
  description: Wrapper
paths:
  /v0.5/care-contexts/discover:
    post:
      tags:
      - discovery
      - cm facing
      summary: Discover patient's accounts
      description: >
        Request for patient care context discover, made by CM for a specific HIP. It is expected that HIP will subsequently return either zero or one patient record with (potentially masked) associated care contexts
          1. **At least one of the verified identifier matches**
          2. **Name (fuzzy), gender matches**
          3. **If YoB was given, age band(+-2) matches**
          4. **If unverified identifiers were given, one of them matches**
          5. **If more than one patient records would be found after aforementioned steps, then patient who matches most verified and unverified identifiers would be returned.**
          6. **If there would be still more than one patients (after ranking) error would be returned**
          7. **Intended HIP should be able to resolve and identify results returned in the subsequent link confirmation request via the specified transactionId**
          8. **Intended HIP should store the discovery results with transactionId and care contexts discovered for subsequent link initiation**

      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIP-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientDiscoveryRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/PatientDiscoveryRequest"
      responses:
        "202":
          description: Request accepted
        "400":
          description: >
            **Causes:**
              * Empty verified identifiers.
              * Format mismatch of any of attributes.
                | type   | Format/Allowed Values|
                | ------- | ----------------    |
                | gender  | M/F/O/U |
                | MOBILE  | valid mobile number with proper country code |
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v0.5/links/link/init:
    post:
      tags:
      - link
      - cm facing
      summary: Link patient's care contexts
      description: >
        Request from CM to links care contexts associated with only one patient
          1. **Validate account reference number and care context reference number**
          2. **Validate transactionId in the request with discovery request entry to check whether there was a discovery
              and were these care contexts discovered or not for a given patient**
          3. **Before eventual link confirmation, HIP needs to authenticate the request with the patient(eg: OTP verification)**
          4. **HIP should communicate the mode of authentication of a successful request to Consent Manager**
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIP-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientLinkReferenceRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/PatientLinkReferenceRequest"
      responses:
        "202":
          description: Request accepted
        "400":
          description: >
            **Causes:**
              * Consent manager user id is not provided
              * Patient reference number is not provided
              * Care context references are not provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v0.5/links/link/confirm:
    post:
      tags:
      - link
      - cm facing
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIP-ID"
      summary: Token submission by Consent Manager for link confirmation
      description: >
        API to submit the token that was sent by HIP during the link request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkConfirmationRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/LinkConfirmationRequest"
      responses:
        "202":
          description: accepted
        "400":
          description: >
            **Causes:**
              * Token is not provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v0.5/links/link/on-add-contexts:
    post:
      tags:
      - link
      - cm facing
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIP-ID"
      summary: callback API for HIP initiated patient linking /link/add-context
      description: >
        If the accessToken is valid for purpose of linking, and specified details provided, CM will send "acknoweldgement.status" as SUCCESS. If any error occcurred, for example invalid token, or other required patient or care-context information not provided, then "error" attribute conveys so. 
          1. **accessToken must be valid and must be for the purpose of linking**
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientCareContextLinkResponse"
          application/xml:
            schema:
              $ref: "#/components/schemas/PatientCareContextLinkResponse"
      responses:
        "202":
          description: accepted
        "400":
          description: >
            **Causes:**
              * resp not specified
              * atleast acknowledgement or error should be specified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v0.5/health-information/hiu/on-request:
    post:
      tags:
      - data flow
      - cm facing
      summary: Health information data request
      description: >
        Callback API for acknowledgement of Health information request of HIU. CM calls this API when it has validated the Health Information request given the consent id. Either the **hiRequest** or **error** would need to be specified. If the health info request was valid, then the ***hiRequest.transactionId*** specifies the transaction context against which HIP would send over the data. 
        Possible cases of errors are
          1. **Invalid consent artefact id**
          2. **Consent has expired**
          3. **Date ranges are invalid**
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIU-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HIUHealthInformationRequestResponse"
          application/xml:
            schema:
              $ref: "#/components/schemas/HIUHealthInformationRequestResponse"
      responses:
        "202":
          description: Request Accepted
        "400":
          description: >
            **Causes:**
              * Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Token is invalid or Link has expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v0.5/consent-requests/on-init:
    post:
      tags:
      - consent flow
      - cm facing
      summary: Response to consent request
      description: |
        Result of consent request creation for a patient. **consentRequest.id** represents the consentrequest id created by CM. The result must contain either **consentRequest** or the **error** caused. <br/>
          Reasons for error may be
          * Invalid references (e.g patient id, hiu id), purpose, hiTypes, ranges, persmission
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIU-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentRequestInitResponse"
          application/xml:
            schema:
              $ref: "#/components/schemas/ConsentRequestInitResponse"
      responses:
        "202":
          description: Request Accepted
        "400":
          description: >
            **Causes:**
              * Invalid data sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Expired/Invalid token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v0.5/consent-requests/on-status:
    post:
      tags:
      - consent flow
      - cm facing
      summary: Result of consent request status
      description: |
        Result of consent request done previously. Status of request can be GRANTED,  DENIED, EXPIRED. If the request was GRANTED, then
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIU-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HIUConsentRequestStatus"
          application/xml:
            schema:
              $ref: "#/components/schemas/HIUConsentRequestStatus"
      responses:
        "202":
          description: Request Accepted
        "400":
          description: >
            **Causes:**
              * Invalid data sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Expired/Invalid token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v0.5/consents/hip/notify:
    post:
      tags:
      - consent flow
      - cm facing
      summary: Consent notification
      description: >
        Notification of consents to health information providers consent request granted, consent revoked, consent expired. Only the GRANTED, REVOKED and EXPIRED status notifications will be sent to HIP.
          1. If consent is granted, status=GRANTED, then consentDetail contains the consent artefact details and signature is available. 
          2. If consent is revoked, then status=REVOKED, and consentId specifes which consent artefact is revoked. 
          3. If the consent has expired, then status=EXPIRED, and consentId specifies which consent artefact has expired. Note, this is also responsibility of the HIP to keep track of consent expiry. Any data request on expired consent artefact must not be done.
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIP-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HIPConsentNotification"
          application/xml:
            schema:
              $ref: "#/components/schemas/HIPConsentNotification"
      responses:
        "202":
          description: Request Accepted
        "401":
          description: >
            **Causes:**
              * Invalid/Expired/Empty token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream services are down
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v0.5/consents/hiu/notify:
    post:
      tags:
      - consent flow
      - cm facing
      summary: Consent notification
      description: |
        Health information user will get notified about the consent request granted or denied, consent revoked, consent expired. 
        1. For consent request grant, status=GRANTED, consentRequestId=<consent-request-id>, and consentArtefacts is an array of generated consent artefact Ids.
        2. For consent request expiry, status=EXPIRED, consentRequestId=<consent-request-id>
        3. For consent request denied, status=DENIED, consentRequestId=<consent-request-id>
        4. For consent revocation, status=REVOKED, consentArtefacts is an array of revoked consent artefact ids
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIU-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HIUConsentNotificationEvent"
      responses:
        "202":
          description: Request Accepted.
        "401":
          description: >
            **Causes:**
              * Invalid/Expired/Empty token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream services are down
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v0.5/consents/on-fetch:
    post:
      tags:
      - consent flow
      - cm facing
      summary: Result of fetch request for a consent artefact
      description: |
        Must contain either consentDetail or error. Possible reason of errors are 
        1. consentId passed through /fetch is invalid
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIU-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentArtefactResponse"
          application/xml:
            schema:
              $ref: "#/components/schemas/ConsentArtefactResponse"
      responses:
        "202":
          description: Request Accepted
        "400":
          description: >
            **Causes:**
              * Invalid data sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Expired/Invalid token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v0.5/health-information/hip/request:
    post:
      tags:
      - data flow
      - cm facing
      summary: Health information data request
      description: >
        API called by CM to request Health information from HIP against a validated consent artefact. The transactionId is the correlation id that HIP should use use when pushing data to the **dataPushUrl**.
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIP-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HIPHIRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/HIPHIRequest"
      responses:
        "202":
          description: Request accepted.
        "400":
          description: >
            **Causes:**
              * Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Token is invalid or Link has expired
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v0.5/users/auth/on-init:
    post:
      tags:
      - user auth
      - cm facing
      summary: Response to user authentication initialization from HIP
      description: >
        If the patient's id is valid, CM will return a transactionId as initialization of user auth. If the request is valid, then 'auth.mode' will convey how the authentication should be done. The authentication can be *mediated* or *direct*. For mediated authentication modes, HIP or HIU is epected to send over relevant code (OTP/token) or demographic info via subsequent API call to /auth/confirm. for direct authentication case, CM will notify requester through/users/auth/notify API. 

          1. **auth.mode** conveys whats the mode of authentication is, and what is expected from HIP/HIU in the subsequent /auth/confirm API call. Possible values 
              1. MOBILE_OTP - auth via OTP to registered mobile. Mediated. 
              2. AADHAAR_OTP - auth initiated with Aadhaar with OTP. Mediated. 
              3. DEMOGRAPHICS - auth initiated with demographic verification
              4. DIRECT - for authentication directly with the patient. e.g. Mobile App, SMS. In this case, the HIP/HIU is not expected to call subsequent /auth/confirm call. CM will do direct authentication with the User (e.g. Mobile App, SMS etc) and will notify requester
          2. **meta.expiry** conveys the expiry time of the token and the authentication session
          3. **NOTE**, only one of **X-HIP-ID** or **X-HIU-ID** will be sent as part of header, not both. 

        The error section in the body, represents the potential errors that may have occurred. Possible reasons:
          1. Patient id is invalid
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIP-ID"
      - $ref: "#/components/parameters/X-HIU-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientAuthInitResponse"
          application/xml:
            schema:
              $ref: "#/components/schemas/PatientAuthInitResponse"
      responses:
        "202":
          description: Request accepted
        "400":
          description: >
            **Causes:**
              * required information not provided
              * neither authInit nor error specified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /v0.5/users/auth/on-confirm:
    post:
      tags:
      - user auth
      - cm facing
      summary: callback API for /auth/confirm (in case of MEDIATED auth) to confirm user authentication or not
      description: >
        This API is called by CM to confirm authentication of users.

          1. **auth.accessToken** - is specific to the purpose mentioned in the /auth/init. This token needs to be used for initiating the intended action. For example for HIP initiated linking of care-contexts
          2. **NOTE**, only one of **X-HIP-ID** or **X-HIU-ID** will be sent as part of header, not both.
      parameters:
      - $ref: "#/components/parameters/authorization"
      - $ref: "#/components/parameters/X-HIP-ID"
      - $ref: "#/components/parameters/X-HIU-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientAuthConfirmResponse"
          application/xml:
            schema:
              $ref: "#/components/schemas/PatientAuthConfirmResponse"
      responses:
        "202":
          description: Request accepted
        "400":
          description: >
            **Causes:**
              * required details not provided
              * neither auth nor error specified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: >
            **Causes:**
              * Unauthorized request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: >
            **Causes:**
              * Downstream system(s) is down.
              * Unhandled exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  parameters:
    authorization:
      name: Authorization
      in: header
      required: true
      description: Access token which was issued after successful login with gateway auth server.
      schema:
        type: string
    X-HIP-ID:
      name: X-HIP-ID
      in: header
      required: true
      description: Identifier of the health information provider to which the request was intended.
      schema:
        type: string
    X-HIU-ID:
      name: X-HIU-ID
      in: header
      required: true
      description: Identifier of the health information user to which the request was intended.
      schema:
        type: string
    X-CM-ID:
      name: X-CM-ID
      in: header
      required: true
      description: Suffix of the consent manager to which the request was intended.
      schema:
        type: string
    LinkRefNumber:
      name: linkRefNumber
      in: path
      required: true
      description: Reference number for the link request made earlier.
      schema:
        $ref: "#/components/schemas/UuidSchema"
    ConsentRequestId:
      name: consentRequestId
      in: path
      required: true
      description: Consent request's identifier
      schema:
        type: string
        format: uuid
    ConsentId:
      name: consentId
      in: path
      required: true
      description: Consent request's identifier
      schema:
        type: string
        format: uuid
    service-id:
      name: service-id
      in: path
      required: true
      schema:
        type: string
  schemas:
    TimestampSchema:
      type: string
      format: date-time
      description: Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
    UuidSchema:
      type: string
      format: uuid
      example: a1s2c932-2f70-3ds3-a3b5-2sfd46b12a18d
    PatientDiscoveryRequest:
      type: object
      required:
      - requestId
      - timestamp
      - transactionId
      - patient
      properties:
        requestId:
          type: string
          format: uuid
          description: a nonce, unique for each HTTP request.
          example: "499a5a4a-7dda-4f20-9b67-e24589627061"
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        transactionId:
          type: string
          format: uuid
          description: correlation-Id for patient discovery and subsequent care context linkage
        patient:
          type: object
          required:
          - id
          - verifiedIdentifiers
          - name
          - gender
          - yearOfBirth
          properties:
            id:
              type: string
              example: <patient-id>@<consent-manager-id>
              description: Identifier of patient at consent manager
            verifiedIdentifiers:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
              xml:
                name: verifiedIdentifiers
                wrapped: true
            unverifiedIdentifiers:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
              xml:
                name: unverifiedIdentifiers
                wrapped: true
            name:
              type: string
              example: "chandler bing"
            gender:
              $ref: "#/components/schemas/PatientGender"
            yearOfBirth:
              type: integer
              example: 2000
      xml:
        name: PatientDiscoveryRequest
    PatientGender:
      type: string
      enum: [M, F, O, U]
    ErrorResponse:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/Error"
      xml:
        name: ErrorResponse
    Identifier:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/IdentifierType"
        value:
          type: string
          example: "+919800083232"
      xml:
        name: Identifier
    IdentifierType:
      type: string
      enum: [MR, MOBILE, NDHM_HEALTH_NUMBER, HEALTH_ID]
    CareContext:
      type: object
      required:
      - referenceNumber
      properties:
        referenceNumber:
          type: string
      xml:
        name: Tag
    PatientLinkReferenceRequest:
      type: object
      required:
      - requestId
      - timestamp
      - transactionId
      - patient
      properties:
        requestId:
          type: string
          format: uuid
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        transactionId:
          type: string
          format: uuid
        patient:
          type: object
          required:
          - id
          - referenceNumber
          - careContexts
          properties:
            id:
              type: string
              example: hinapatel79@ndhm
              description: Identifier of patient at consent manager
            referenceNumber:
              type: string
              example: TMH-PUID-001
            careContexts:
              type: array
              items:
                $ref: "#/components/schemas/CareContext"
              xml:
                name: careContexts
                wrapped: true
      xml:
        name: PatientLinkReferenceRequest

    LinkConfirmationRequest:
      type: object
      required:
      - requestId
      - timestamp
      - confirmation
      properties:
        requestId:
          type: string
          format: uuid
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        confirmation:
          type: object
          required:
          - linkRefNumber
          - token
          properties:
            linkRefNumber:
              type: string
            token:
              type: string
    Error:
      type: object
      properties:
        code:
          type: integer
          enum: [1000, 10001]
        message:
          type: string
      xml:
        name: Error
    consent:
      type: object
      required:
      - id
      properties:
        id:
          type: string
    dateRange:
      type: object
      required:
      - from
      - to
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
    HIPConsentNotification:
      type: object
      required:
      - requestId
      - timestamp
      - notification
      properties:
        requestId:
          type: string
          format: uuid
          description: a nonce, unique for each HTTP request
          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        notification:
          type: object
          required:
          - status
          - consentId
          - consentDetail
          - signature
          properties:
            status:
              $ref: "#/components/schemas/ConsentStatus"
            consentId:
              type: string
              format: uuid
            consentDetail:
              type: object
              required:
              - consentId
              - createdAt
              - patient
              - careContexts
              - purpose
              - hip
              - hiTypes
              - permission
              - consentManager
              properties:
                schemaVersion:
                  type: string
                  format: string
                consentId:
                  type: string
                  format: uuid
                createdAt:
                  type: string
                  format: date-time
                patient:
                  $ref: "#/components/schemas/ConsentManagerPatientID"
                careContexts:
                  type: array
                  items:
                    type: object
                    required:
                    - patientReference
                    - careContextReference
                    properties:
                      patientReference:
                        type: string
                        example: hinapatel79@hospital
                      careContextReference:
                        type: string
                        example: Episode1
                purpose:
                  $ref: "#/components/schemas/UsePurpose"
                hip:
                  type: object
                  allOf:
                  - $ref: "#/components/schemas/OrganizationRepresentation"
                  - xml:
                      name: hip
                consentManager:
                  type: object
                  allOf:
                  - $ref: "#/components/schemas/OrganizationReference"
                  - xml:
                      name: consentManager
                hiTypes:
                  type: array
                  items:
#                    $ref: "#/components/schemas/HITypeEnum"
                    type: string
                permission:
                  $ref: "#/components/schemas/Permission"
            signature:
              type: string
              example: Signature of CM as defined in W3C standards; Base64 encoded
    HITypeEnum:
      type: string
      enum:
      - OPConsultation
      - Prescription
      - DischargeSummary
      - DiagnosticReport
      - ImmunizationRecord
      - HealthDocumentRecord
      - WellnessRecord
      xml:
        name: HIType
    ConsentStatus:
      type: string
      enum:
      - GRANTED
      - EXPIRED
      - DENIED
      - REQUESTED
      - REVOKED
    ConsentManagerPatientID:
      type: object
      properties:
        id:
          type: string
          xml:
            attribute: true
          format: <user-id>@ndhm
          example: hinapatel79@ndhm
    UsePurpose:
      type: object
      required:
      - text
      - code
      properties:
        text:
          type: string
        code:
          type: string
          description: From the fixed set, documented at refUri
        refUri:
          type: string
          format: uri
    Permission:
      type: object
      required:
      - accessMode
      - dateRange
      - dataEraseAt
      - frequency
      properties:
        accessMode:
          type: string
          enum: [VIEW, STORE, QUERY, STREAM]
        dateRange:
          type: object
          properties:
            from:
              type: string
              format: date-time
            to:
              type: string
              format: date-time
        dataEraseAt:
          type: string
          format: date-time
        frequency:
          type: object
          properties:
            unit:
              type: string
              enum: [HOUR, WEEK, DAY, MONTH, YEAR]
            value:
              type: integer
            repeats:
              type: integer
      xml:
        name: Permission
    OrganizationRepresentation:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          xml:
            attribute: true
      xml:
        name: OrganizationResponse
    OrganizationReference:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          xml:
            attribute: true
      xml:
        name: OrganizationReference
    keyMaterial:
      type: object
      required:
      - cryptoAlg
      - curve
      - dhPublicKey
      - nonce
      properties:
        cryptoAlg:
          type: string
          format: string
          example: ECDH
        curve:
          type: string
          format: string
          example: Curve25519
        dhPublicKey:
          $ref: "#/components/schemas/keyObject"
        nonce:
          type: string
          format: 32 byte string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    keyObject:
      type: object
      required:
      - expiry
      - parameters
      - keyValue
      properties:
        expiry:
          type: string
          format: date-time
        parameters:
          type: string
          format: string
          example: Curve25519/32byte random key
        keyValue:
          type: string
          format: string
    Requester:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          example: Dr. Manju
        identifier:
          type: object
          properties:
            type:
              type: string
              example: REGNO
            value:
              type: string
              example: "MH1001"
            system:
              type: string
              example: https://www.mciindia.org
    ConsentArtefactReference:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          example: "<consent-artefact-id>"
    HIUConsentNotificationEvent:
      type: object
      required:
      - requestId
      - timestamp
      - notification
      properties:
        requestId:
          type: string
          format: uuid
          description: a nonce, unique for each HTTP request
          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        notification:
          type: object
          required:
          - status
          - consentRequestId
          properties:
            consentRequestId:
              type: string
              example: "<consent-request-id>"
            status:
              $ref: "#/components/schemas/ConsentStatus"
            consentArtefacts:
              type: array
              items:
                $ref: "#/components/schemas/ConsentArtefactReference"
              description: if the status is GRANTED or REVOKED, then the consentArtefact references (Ids) must be specified.
    ConsentArtefactResponse:
      type: object
      required:
      - requestId
      - timestamp
      - resp
      properties:
        requestId:
          type: string
          format: uuid
          description: a nonce, unique for each HTTP request
          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        consent:
          type: object
          required:
          - status
          - consentDetail
          - signature
          properties:
            status:
              $ref: "#/components/schemas/ConsentStatus"
            consentDetail:
              type: object
              required:
              - consentId
              - createdAt
              - patient
              - careContexts
              - purpose
              - hip
              - hiu
              - consentManager
              - hiTypes
              - permission
              properties:
                schemaVersion:
                  type: string
                  format: string
                consentId:
                  type: string
                  format: uuid
                createdAt:
                  type: string
                  format: date-time
                patient:
                  $ref: "#/components/schemas/ConsentManagerPatientID"
                careContexts:
                  type: array
                  items:
                    type: object
                    required:
                    - patientReference
                    - careContextReference
                    properties:
                      patientReference:
                        type: string
                        example: hinapatel79@hospital
                      careContextReference:
                        type: string
                        example: Episode1
                purpose:
                  $ref: "#/components/schemas/UsePurpose"
                hip:
                  type: object
                  allOf:
                  - $ref: "#/components/schemas/OrganizationRepresentation"
                  - xml:
                      name: hip
                hiu:
                  type: object
                  allOf:
                  - $ref: "#/components/schemas/OrganizationRepresentation"
                  - xml:
                      name: hiu
                consentManager:
                  type: object
                  allOf:
                  - $ref: "#/components/schemas/OrganizationRepresentation"
                  - xml:
                      name: consentManager
                requester:
                  $ref: "#/components/schemas/Requester"
                hiTypes:
                  type: array
                  items:
#                    $ref: "#/components/schemas/HITypeEnum"
                    type: string
                permission:
                  $ref: "#/components/schemas/Permission"
            signature:
              type: string
              example: Signature of CM as defined in W3C standards; Base64 encoded
        error:
          $ref: "#/components/schemas/Error"
        resp:
          $ref: "#/components/schemas/RequestReference"
    HIUHealthInformationRequestResponse:
      type: object
      required:
      - requestId
      - timestamp
      - resp
      properties:
        requestId:
          $ref: "#/components/schemas/UuidSchema"
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        hiRequest:
          type: object
          required:
          - transactionId
          - sessionStatus
          properties:
            transactionId:
              $ref: "#/components/schemas/UuidSchema"
            sessionStatus:
              type: string
              enum:
              - REQUESTED
              - ACKNOWLEDGED
        error:
          $ref: "#/components/schemas/Error"
        resp:
          $ref: "#/components/schemas/RequestReference"
    HIPHIRequest:
      type: object
      required:
      - requestId
      - timestamp
      - transactionId
      - hiRequest
      properties:
        requestId:
          $ref: "#/components/schemas/UuidSchema"
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        transactionId:
          $ref: "#/components/schemas/UuidSchema"
        hiRequest:
          type: object
          required:
          - consent
          - dataPushUrl
          - keyMaterial
          - dateRange
          properties:
            consent:
              $ref: "#/components/schemas/consent"
            dateRange:
              $ref: "#/components/schemas/dateRange"
            dataPushUrl:
              type: string
            keyMaterial:
              $ref: "#/components/schemas/keyMaterial"
    ConsentRequestInitResponse:
      type: object
      required:
      - requestId
      - timestamp
      - resp
      properties:
        requestId:
          type: string
          format: uuid
          description: a nonce, unique for each HTTP request
          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        consentRequest:
          type: object
          required:
          - id
          properties:
            id:
              type: string
              format: uuid
              description: id of the consent-request created
              example: f29f0e59-8388-4698-9fe6-05db67aeac46
        error:
          $ref: "#/components/schemas/Error"
        resp:
          $ref: "#/components/schemas/RequestReference"
      xml:
        name: ConsentRequestInitResponse
    RequestReference:
      type: object
      required:
      - requestId
      properties:
        requestId:
          type: string
          format: uuid
          description: the requestId that was passed
    HIUConsentRequestStatus:
      type: object
      required:
      - requestId
      - timestamp
      - resp
      properties:
        requestId:
          type: string
          format: uuid
          description: a nonce, unique for each HTTP request
          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        consentRequest:
          type: object
          required:
          - id
          - status
          properties:
            id:
              type: string
              example: "<consent-request-id>"
            status:
              $ref: "#/components/schemas/ConsentStatus"
            consentArtefacts:
              type: array
              items:
                $ref: "#/components/schemas/ConsentArtefactReference"
        error:
          $ref: "#/components/schemas/Error"
        resp:
          $ref: "#/components/schemas/RequestReference"
    PatientAuthPurpose:
      type: string
      enum: [LINK, KYC, KYC_AND_LINK]
      description: what is the purpose of user auth
    PatientAuthInitResponse:
      type: object
      required:
      - requestId
      - timestamp
      - resp
      properties:
        requestId:
          type: string
          format: uuid
          description: a nonce, unique for each HTTP request
          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        auth:
          type: object
          required:
          - transactionId
          - mode
          properties:
            transactionId:
              type: string
            mode:
              $ref: "#/components/schemas/AuthenticationMode"
            meta:
              $ref: "#/components/schemas/AuthMeta"
        error:
          $ref: "#/components/schemas/Error"
        resp:
          $ref: "#/components/schemas/RequestReference"
    AuthenticationMode:
      type: string
      enum: ["MOBILE_OTP", "DIRECT", "DEMOGRAPHICS", "AADHAAR_OTP"]
      description: >
        Subjected to CM specific capability
         1. MOBILE_OTP - for SMS OTP
         2. DIRECT - for authentication directly with the patient. e.g. Mobile App, SMS
         3. AADHAAR_OTP - for auth using OTP sent to Aadhaar number
         4. DEMOGRAPHICS - for auth using demographic verification.
    AuthMeta:
      type: object
      properties:
        hint:
          type: string
        expiry:
          type: string
          example: "2019-12-30T12:01:55Z"
      xml:
        name: Meta
    PatientAuthConfirmResponse:
      type: object
      required:
      - requestId
      - timestamp
      - resp
      properties:
        requestId:
          type: string
          format: uuid
          description: a nonce, unique for each HTTP request
          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        auth:
          type: object
          description: >
            depending on the purpose of auth, as specified in /auth/init, the response may include the following 
              1. LINK - only returns **accessToken**
              2. KYC - only returns **patient**
              3. KYC_AND_LINK - returns both **accessToken** and **patient**
          properties:
            accessToken:
              type: string
              description: access token for initialization of subsequent action.
            validity:
              $ref: "#/components/schemas/AccessTokenValidity"
            patient:
              $ref: "#/components/schemas/PatientDemographicResponse"
        error:
          $ref: "#/components/schemas/Error"
        resp:
          $ref: "#/components/schemas/RequestReference"
    PatientDemographicResponse:
      type: object
      required:
      - id
      - name
      - gender
      - yearOfBirth
      properties:
        id:
          type: string
          example: <patient-id>@<consent-manager-id>
          description: PHR Identifier of patient at consent manager
        name:
          type: string
          example: "Hina Patel"
        gender:
          $ref: "#/components/schemas/PatientGender"
        yearOfBirth:
          type: integer
          example: 2000
        address:
          $ref: "#/components/schemas/PatientAddress"
        identifiers:
          type: array
          items:
            $ref: "#/components/schemas/Identifier"
          xml:
            name: identifiers
            wrapped: true
    PatientAddress:
      type: object
      properties:
        line:
          type: string
        district:
          type: string
        state:
          type: string
        pincode:
          type: string
    PatientCareContextLinkResponse:
      type: object
      required:
      - requestId
      - timestamp
      - resp
      properties:
        requestId:
          type: string
          format: uuid
          description: a nonce, unique for each HTTP request
          example: 5f7a535d-a3fd-416b-b069-c97d021fbacd
        timestamp:
          $ref: "#/components/schemas/TimestampSchema"
        acknowledgement:
          type: object
          required:
          - status
          properties:
            status:
              type: string
              enum:
              - SUCCESS
        error:
          $ref: "#/components/schemas/Error"
        resp:
          $ref: "#/components/schemas/RequestReference"
    AccessTokenValidity:
      type: object
      required:
      - purpose
      - requester
      - expiry
      - limit
      properties:
        purpose:
          $ref: "#/components/schemas/PatientAuthPurpose"
        requester:
          $ref: "#/components/schemas/PatientAuthRequester"
        expiry:
          $ref: "#/components/schemas/TimestampSchema"
        limit:
          type: integer
          example: "1"
          description: number of times, the token can be used
    PatientAuthRequester:
      type: object
      required:
      - type
      - id
      description: identification of requester
      properties:
        type:
          type: string
          enum: [HIP, HIU]
        id:
          type: string
          example: 100005